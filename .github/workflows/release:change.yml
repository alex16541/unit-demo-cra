name: release:change

on:
    push:
        branches: "release/v*"
permissions:
    contents: write

jobs:
    test:
        if: github.event.commits[0].author.name != 'github-actions[bot]'
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x]

        steps:
            - uses: actions/checkout@v3
              with:
                  token: ${{ secrets.GH_ACCESS_TOKEN}}
                  fetch-depth: 0

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Get changelog
              run: |
                  VERSION=$(git tag --sort v:refname |grep v | tail -1)
                  echo VERSION=$VERSION >> "$GITHUB_ENV"

                  PREVIOUS_VERSION=$(git tag --sort v:refname |grep v | tail -2 | head -1)
                  echo PREVIOUS_VERSION=$PREVIOUS_VERSION >> "$GITHUB_ENV"

                  CHANGES=$(git log --pretty="- %s" $PREVIOUS_VERSION..)

                  printf "# Changelog (\`$VERSION\`)\n\n## Changes\n$CHANGES" > CHANGELOG.md

            - name: Install dependencies
              run: |
                npm install
                npx playwright install --with-deps chromium     

            - name: Save chagenlog
              run: |
                  git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git config --local user.name "github-actions[bot]"
                  git add .
                  git commit -m 'docs: Обновить CHANGELOG'
                  git push

            - name: Find issue
              run: |
               echo ISSUE_NUMBER=$( node config/githubActions/getIssueNumber.js ${{ github.repository }} ${{ secrets.GH_ACCESS_TOKEN }} ${{ env.VERSION }}) >> "$GITHUB_ENV"

            - name: Run tests
              id: tests
              run: |
                npm run ci:test:unit
                npm run ci:test:e2e
            
            - name: Create failure comment
              if: ${{ failure() && steps.tests.conclusion == 'failure'}}
              run: | 
                curl -L \
                  -X POST \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.GH_ACCESS_TOKEN }}"\
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/${{github.repository}}/issues/${{env.ISSUE_NUMBER}}/comments \
                  -d '{"body":"Тесты провалены ([${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}))"}'

            - name: Create success comment
              run: |
                curl -L \
                  -X POST \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.GH_ACCESS_TOKEN }}"\
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/${{ github.repository }}/issues/${{ env.ISSUE_NUMBER }}/comments \
                  -d '{"body":"Тесты пройдены ([${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}))"}'
            
            - name: Deploy
              run: |
                npm run ci:predeploy
                npm run ci:deploy
            
            - name: Create publish comment
              run: |
                curl -L \
                  -X POST \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.GH_ACCESS_TOKEN }}"\
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/${{ github.repository }}/issues/${{ env.ISSUE_NUMBER }}/comments \
                  -d '{"body":"Опублековано на Github Pages"}'
            
            - name: Close issue
              run: |
                curl -L \
                  -X PATCH \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.GH_ACCESS_TOKEN }}"\
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/${{ github.repository }}/issues/${{ env.ISSUE_NUMBER }} \
                  -d '{"state":"closed", "state_reason": "completed"}'
